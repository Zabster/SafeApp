plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'org.jetbrains.kotlin.kapt'
    id 'androidx.navigation.safeargs.kotlin'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "ru.zabster.safepassapp"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.schemaLocation":"$projectDir/schemas".toString(),
                        "room.incremental":"true",
                        "room.expandProjection":"true"]
            }
        }

        buildConfigField "String", "APP_SECRET", "\"safepassapp\""
    }

    buildFeatures {
        dataBinding true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

// dependencies versions
def dagger_version = "2.30.1"
def room_version = "2.2.6"
def coroutines_version = "1.3.9"
def lifecycle_version = "2.3.1"
def gson_version = "2.8.6"
def sqlcipher_version = "4.4.2"
def nav_version = "2.3.4"

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "androidx.core:core-ktx:1.3.2"
    implementation "androidx.appcompat:appcompat:1.2.0"
    implementation "androidx.fragment:fragment-ktx:1.3.2"
    implementation 'com.google.android.material:material:1.3.0'
    implementation "androidx.constraintlayout:constraintlayout:2.0.4"
    testImplementation "junit:junit:4.13.1"
    androidTestImplementation "androidx.test.ext:junit:1.1.2"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.3.0"

    // coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    // dagger
    implementation "com.google.dagger:dagger-android:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    // room
    implementation "androidx.room:room-runtime:$room_version"
    implementation "net.zetetic:android-database-sqlcipher:$sqlcipher_version" // encryption
    implementation "androidx.room:room-ktx:$room_version" // optional - Kotlin Extensions and Coroutines support for Room
    kapt "androidx.room:room-compiler:$room_version"
    testImplementation "androidx.room:room-testing:$room_version" // optional - Test helpers

    // lifecycle
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version" // ViewModel
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version" // LiveData
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version" // Lifecycles only (without ViewModel or LiveData)
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version" // Saved state module for ViewModel
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    // json
    implementation "com.google.code.gson:gson:$gson_version"

    // navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
}